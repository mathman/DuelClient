package duelclient;

import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;

public class PartieWindow extends javax.swing.JFrame
{
    PartieWindow()
    {
        _playersScore = new ArrayList<>();
        _rowsText = 0;
        initComponents();
        pack();
        this.setTitle("Space Attack");
        newText.addKeyListener(new ClavierListenerChat());
        getContentPane().add(Partie.getInstance());
        setLocationRelativeTo(null);
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        logs = new javax.swing.JTextArea();
        newText = new javax.swing.JTextField();
        leave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        logs.setEditable(false);
        logs.setColumns(20);
        logs.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        logs.setRows(5);
        jScrollPane1.setViewportView(logs);

        newText.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        newText.setToolTipText("");

        leave.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        leave.setText("Quitter");
        leave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leaveActionPerformed(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("jLabel1");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("jLabel2");

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel3.setText("jLabel3");

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel4.setText("jLabel4");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 798, Short.MAX_VALUE)
                    .addComponent(newText))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(leave, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3))
                        .addGap(8, 8, 8)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(605, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(leave, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(78, 78, 78)))
                        .addComponent(newText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(5, 5, 5))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void leaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leaveActionPerformed
        // TODO add your handling code here:
        Client.getInstance().leaveGame();
    }//GEN-LAST:event_leaveActionPerformed

    public void sendLog(String log)
    {
        String Newligne = System.getProperty("line.separator");
        if (_rowsText < 7)
        {
            String text = "";
            int space = 6 - _rowsText;
            while (space > 0)
            {
                text += Newligne;
                space--;
            }
            if (_rowsText == 0)
            {
                logs.setText(text + log);
            }
            else
            {
                String oldText = logs.getText();
                String oldTextArray[] = oldText.split(Newligne);
                oldText = "";
                int loops = _rowsText;
                while (loops > 0)
                {
                    oldText += oldTextArray[7 - loops] + Newligne;
                    loops--;
                }
                logs.setText(text + oldText + log);
            }
        }
        else
        {
            String oldText = logs.getText();
            oldText += Newligne;
            logs.setText(oldText + log);
            logs.setCaretPosition(logs.getDocument().getLength());
        }
        _rowsText++;
    }
    
    private class ClavierListenerChat extends KeyAdapter
    {
        @Override
        public void keyPressed(KeyEvent event)
        {
            switch (event.getKeyCode())
            {
                case KeyEvent.VK_ENTER:
                    String text = newText.getText();
                    String textReplace = text.replaceAll(" ", "-");
                    if (textReplace != null)
                    {
                        Packet packet = new Packet(7, 4 + textReplace.toCharArray().length*2);
                        packet.putString(textReplace);
                        Client.getInstance().sendPacket(packet);
                        newText.setText("");
                    }
                    Partie.getInstance().requestFocus();
                    break;
            }
        }
    }
    
    public void startGame(Packet messagePacket)
    {
        Partie.getInstance().startGame(messagePacket, this);
        changeScore();
    }
    
    public void addPlayerScore(long guid)
    {
        _playersScore.add(guid);
    }
    
    public void updateDelta(Packet messagePacket)
    {
        Partie.getInstance().updateDelta(messagePacket);
    }
    
    public void updatePosition(Packet messagePacket)
    {
        Partie.getInstance().updatePosition(messagePacket);
    }
    
    public void updateScore(Packet messagePacket)
    {
        Partie.getInstance().updateScore(messagePacket);
        changeScore();
    }
    
    public void receiveFire(Packet messagePacket)
    {
        Partie.getInstance().receiveFire(messagePacket);
    }
    
    public void addMob(Packet messagePacket)
    {
        Partie.getInstance().addMob(messagePacket);
    }
    
    public void addPlayerShip(long guid, Packet messagePacket)
    {
        Partie.getInstance().addPlayerShip(guid, messagePacket);
    }
    
    public void destroyObject(Packet messagePacket)
    {
        Partie.getInstance().destroyObject(messagePacket);
    }
    
    private void changeScore()
    {
        for (int i = 0; i < _playersScore.size(); i++)
        {
            long guid = _playersScore.get(i);
            DuelPlayer player = Client.getInstance().getDuelPlayer(guid);
            if (player != null)
            {
                if (i == 0)
                {
                    jLabel1.setText(player.getName());
                    String score = Integer.toString(player.getScore()); 
                    jLabel3.setText(score);
                }
                else if (i == 1)
                {
                    jLabel2.setText(player.getName());
                    String score = Integer.toString(player.getScore()); 
                    jLabel4.setText(score);
                }
            }
        }
    }
    
    private int _rowsText;
    private List<Long> _playersScore;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leave;
    private javax.swing.JTextArea logs;
    private javax.swing.JTextField newText;
    // End of variables declaration//GEN-END:variables
}
